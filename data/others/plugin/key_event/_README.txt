========== ========== ========== ==========
     独自キーイベントプラグイン
========== ========== ========== ==========

【最終更新日】2020/04/09 04:51
【  名  称  】独自キーイベントプラグイン
【  種  別  】ティラノスクリプト用の外部プラグイン
【 製 作 者 】小鳥遊銀（たかなし ぎん）
【 開発環境 】64bit版Windows10, ティラノスクリプトv500, ティラノスタジオv100
【 動作環境 】上記開発環境にて確認
【 連 絡 先 】Twitterまでどうぞ（@diyin_near_j）
【 配 布 元 】スクリプト用：https://fantia.jp/products/53493
　　　　　　　ビルダー用：https://fantia.jp/products/56246
【ライセンス】MIT

---------- ----------



◇ 概要 ◇

標準で設定されているkeyConfigとは別にキーイベントを設定するプラグインです。

各イベントにはnameを指定することができ、[clear_key_event name="XXX"]で指定した[key_event]を削除することができます。
ただしここでのnameはhtmlのクラスとは別です。

このプラグインの使いどころとしては、ESCキーによる常時強制終了や、方向キーによる細かな指定、ムービー中のクリックないしEnterキーによるスキップ等々。
標準のkeyConfigは[stop_keyconfig]で処理が使えなくなったり、またゲーム中に処理を書き換えるのが少々面倒だったり、なにより個人的にキー操作による[jump]が出来たらなぁって思っていたので作りました。
まだまだ改善余地があるのでちまちま更新する予定です。

またfunction.jsには自由に関数やオブジェクトを記述しても大丈夫です。

※ 独自に「$(window).on();」を登録している場合[clear_key_event]でイベントが削除されるのでご注意ください。

このプラグインを導入すると、
・[key_event]
・[clear_key_event]
の2つのタグを使えるようになります。



◇ ファイル構成 ◇

for
 ├ system.js
 ├ function.js
 ├ init.ks
 ├ _SAMPLE.ks
 └ _README.txt



◇ 導入方法 ◇

解凍して出てきた「key_event」フォルダを、
「data/others/plugin/」下にコピーしてください。
その後、first.ksに以下のタグを記述してください。

    [plugin name='key_event']



◇ pluginタグに指定できるパラメータ ◇

-



◇ タグリファレンス ◇

◆ [key_event] 独自キーイベント登録

    || 概要

    キーイベントを登録します。
    サポートしているイベントは「click」「keydown」「keyup」の3つです。
    通常$(element).off()をすると全てのイベントが削除されますが、このプラグインでは各イベントに「name」を指定することで
    削除したいイベントだけ削除することが出来ます。

    || 指定できるパラメータ

    name    イベント固有の名前を指定します。[clear_key_event]で同じ「name」を指定すると、そのイベントが削除されます。

    clear   [clear_key_event]では「name」を指定しないと通常全てのイベントを削除しますが、
            「clear=false」を指定すると削除されないようになります。
            もしここで「true」を指定してイベントを削除したい場合は[clear_key_event]で[reset=true]を指定してください。

    medhod  「click」「keydown」「keyup」を指定します。
             「click」は対象要素を左クリックした時。
             「click」は対象要素を右クリックした時。
             「keydown」はキーを押しこんだ時。
             「keyup」はキーを押して上げた時。

    key_code  keyCodeを指定してください。
              keyCodeというのはキーボードそれぞれに割り当てられた数値で、例えばEnterキーだと13です。
              「click」の場合は指定しなくても大丈夫です。
              コードが分からない場合は「javascript keycode」と検索すれば出てきます。

    element   こちらはCSSないしjQueryを理解している人向けです。
              対象要素のidやクラスを指定することができます。
              デフォルトではwindowが指定されています。

    storage   [jump]のstorageと同じです。イベントが発火した時にジャンプします。指定をしなくても大丈夫です。

    target    [jump]のtargetと同じです。イベントが発火した時にジャンプします。指定をしなくても大丈夫です。

    exp       [button]のexpパラメーターと同じです。JS式を評価します。

    mouseover_exp  JSないしjQueryが分かる方向け。
                   対象要素の上にマウスが乗った時にJS式を評価します。
                   ただし対象要素の上にレイヤーが表示されていると反応しないので注意してください。
                   また要素をクリックすると反応しなくなるので一度クリアすることを推奨します。

    mouseout_exp   JSないしjQueryが分かる方向け。
                   対象要素の上からマウスが離れた時にJS式を評価します。
                   ただし対象要素の上にレイヤーが表示されていると反応しないので注意してください。
                   また要素をクリックすると反応しなくなるので一度クリアすることを推奨します。

    preexp    [button]のpreexpパラメーターと同じです。
              タグが通過された時に固有のpreexpが保存されます。

◆ [clear_key_event] キーイベントの削除

    || 概要

    登録したキーイベントを削除します。
    もしも独自に「$(window).on();」を登録している場合はそのイベントも削除されるのでご注意ください。

    || 指定できるパラメータ

    name    削除するイベント名を指定してください。
            「name」を指定した場合、一つのタグで削除出来るイベントは一つまでです。
            一つのタグで複数指定することは出来ないのでご注意ください。

    all    trueを指定すると全てのイベントを削除します
           [key_event]で「clear=false」を指定されたイベントは削除されません

    reset  clearの値関係なく全てのイベントを削除します。

◆ [make_key_event] make.ks用

    || 概要

    シナリオ上でイベントを登録している場合は必ずmake.ksにこのタグを記述してください。
    このタグをmake.ksに記述すると、ロード後にイベントが復帰されます。


◇ FAQ・既知のバグ等 ◇

-



◇ 履歴 ◇

2020/05/17 [make_key_event]追加
2020/04/10 methodパラメーターにright_clickを追加
           コード整理・バグ修正
2020/04/09 elementパラメーター追加
           mouseover_expとmouseout_expパラメーター追加
           スマホの場合clickを指定した場合自動でtouchstartになるように改良
           _SAMPLE.ksと_README.txtを追加
2020/03/26 nameを指定できるように改良
2020/03/25 リリース
